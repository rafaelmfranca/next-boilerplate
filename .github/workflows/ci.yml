name: CI

on:
    push:
        branches:
            - main
            - master
    pull_request:
        branches:
            - main
            - master

jobs:
    ci:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest]
                node: [14]

        steps:
            - name: Checkout
              uses: actions/checkout@master

            - name: Setup node env
              uses: actions/setup-node@v2.1.2
              with:
                  node-version: ${{ matrix.node }}

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache node_modules
              uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: yarn

            - name: Run lint
              run: yarn lint

            - name: Run tests
              run: yarn test
            
            - name: Code cov
              uses: actions/checkout@master
              uses: codecov/codecov-action@v2
              with:
                token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
                files: ./coverage1.xml,./coverage2.xml # optional
                flags: unittests # optional
                name: codecov-umbrella # optional
                fail_ci_if_error: true # optional (default = false)
                verbose: true # optional (default = false)

            - name: Build
              run: yarn build

            # - name: Run e2e test
            #   run: yarn cypress:test
